basePath: /api/v1
definitions:
  dto.CreateContainerStatusRequest:
    properties:
      container_id:
        type: string
      ip_address:
        type: string
      last_successful_ping:
        type: string
      name:
        type: string
      ping_time:
        type: number
      status:
        enum:
        - created
        - restarting
        - running
        - removing
        - paused
        - exited
        - dead
        type: string
    required:
    - container_id
    - ip_address
    - last_successful_ping
    - status
    type: object
  dto.GetContainerStatusResponse:
    properties:
      container_id:
        type: string
      created_at:
        type: string
      ip_address:
        type: string
      last_successful_ping:
        type: string
      name:
        type: string
      ping_time:
        type: number
      status:
        type: string
      updated_at:
        type: string
    type: object
  dto.UpdateContainerStatusRequest:
    properties:
      last_successful_ping:
        type: string
      name:
        type: string
      ping_time:
        type: number
      status:
        enum:
        - created
        - restarting
        - running
        - removing
        - paused
        - exited
        - dead
        type: string
    type: object
info:
  contact:
    email: repyg@yandex.ru
    name: Mikhail Gunin
    url: https://github.com/repyg
  description: REST API for monitoring Docker containers.
  title: Docker Monitoring API
  version: "1.2"
paths:
  /container_status:
    get:
      consumes:
      - application/json
      description: Returns a list of containers with optional filtering by various
        parameters
      parameters:
      - description: Filter by container ID
        in: query
        name: container_id
        type: string
      - description: Filter by IP
        in: query
        name: ip
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by status
        in: query
        name: status
        type: string
      - description: Filter by minimum ping time
        in: query
        name: ping_time_min
        type: number
      - description: Filter by maximum ping time
        in: query
        name: ping_time_max
        type: number
      - description: 'Filter by creation date (greater than or equal to), format:
          RFC3339'
        in: query
        name: created_at_gte
        type: string
      - description: 'Filter by creation date (less than or equal to), format: RFC3339'
        in: query
        name: created_at_lte
        type: string
      - description: 'Filter by last update date (greater than or equal to), format:
          RFC3339'
        in: query
        name: updated_at_gte
        type: string
      - description: 'Filter by last update date (less than or equal to), format:
          RFC3339'
        in: query
        name: updated_at_lte
        type: string
      - description: Limit the number of returned records
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.GetContainerStatusResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve a list of containers
      tags:
      - Containers
    post:
      consumes:
      - application/json
      description: Adds a new container to the database
      parameters:
      - description: Container data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateContainerStatusRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.GetContainerStatusResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create a new container
      tags:
      - Containers
  /container_status/{container_id}:
    delete:
      consumes:
      - application/json
      description: Deletes a container from the database
      parameters:
      - description: Container ID
        in: path
        name: container_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete container by container ID
      tags:
      - Containers
    patch:
      consumes:
      - application/json
      description: Partially updates a container by its container ID
      parameters:
      - description: Container ID
        in: path
        name: container_id
        required: true
        type: string
      - description: Fields to update
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateContainerStatusRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update container by container ID
      tags:
      - Containers
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: X-Api-Key
    type: apiKey
swagger: "2.0"
